# Generated by Django 4.2.6 on 2025-10-23 12:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(blank=True, max_length=150)),
                ('bio', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=120)),
                ('country', models.CharField(blank=True, max_length=120)),
                ('avatar_url', models.URLField(blank=True)),
                ('favorite_distance', models.CharField(blank=True, choices=[('5K', '5K'), ('10K', '10K'), ('21K', 'Half Marathon'), ('42K', 'Marathon'), ('ULTRA', 'Ultra Marathon')], max_length=12)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=120)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=30)),
                ('website', models.URLField(blank=True)),
                ('instagram_handle', models.CharField(blank=True, max_length=80)),
                ('strava_profile', models.URLField(blank=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user__username'],
            },
        ),
        migrations.CreateModel(
            name='RunnerAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True)),
                ('achieved_on', models.DateField(blank=True, null=True)),
                ('link', models.URLField(blank=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='profiles.userprofile')),
            ],
            options={
                'ordering': ['-achieved_on', 'title'],
            },
        ),
        migrations.CreateModel(
            name='UserRaceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=50)),
                ('registration_date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('registered', 'Registered'), ('completed', 'Completed'), ('dnf', 'Did Not Finish'), ('dns', 'Did Not Start'), ('upcoming', 'Upcoming')], default='registered', max_length=20)),
                ('bib_number', models.CharField(blank=True, max_length=20)),
                ('finish_time', models.DurationField(blank=True, null=True)),
                ('medal_awarded', models.BooleanField(default=False)),
                ('certificate_url', models.URLField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participant_history', to='events.event')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='profiles.userprofile')),
            ],
            options={
                'ordering': ['-registration_date'],
                'unique_together': {('profile', 'event', 'category')},
            },
        ),
    ]
